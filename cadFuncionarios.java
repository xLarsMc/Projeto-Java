//Leandro Henrique Oliveira Neves - RA: 2503514

package com.mycompany.projetopessoalfinal;

import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class cadFuncionarios extends javax.swing.JFrame {

    private static cadFuncionarios cadFuncionariosUnico;
    
    Funcionarios f = new Funcionarios();
    
    public cadFuncionarios() {
        initComponents();
        setLocationRelativeTo( null );
    }
    
    /**
     *
     * @return
     */
    public static cadFuncionarios getCadFuncionarios(){
        if(cadFuncionariosUnico == null){
            cadFuncionariosUnico = new cadFuncionarios();
        }
        return cadFuncionariosUnico;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGpTipoCont = new javax.swing.ButtonGroup();
        btGpPersPart = new javax.swing.ButtonGroup();
        btGpSexo = new javax.swing.ButtonGroup();
        msgNomeAp = new javax.swing.JLabel();
        msgCpf = new javax.swing.JLabel();
        msgSexo = new javax.swing.JLabel();
        msgIdade = new javax.swing.JLabel();
        msgTurnServ = new javax.swing.JLabel();
        msgSal = new javax.swing.JLabel();
        msgFunc = new javax.swing.JLabel();
        msgDataCad = new javax.swing.JLabel();
        entNomeAp = new javax.swing.JTextField();
        entCpf = new javax.swing.JTextField();
        entIdade = new javax.swing.JTextField();
        entTurnServ = new javax.swing.JTextField();
        entSal = new javax.swing.JTextField();
        entFunc = new javax.swing.JTextField();
        entDataCad = new javax.swing.JTextField();
        btCad = new javax.swing.JButton();
        btEdit = new javax.swing.JToggleButton();
        btConsul = new javax.swing.JToggleButton();
        btLimpar = new javax.swing.JToggleButton();
        btListAp = new javax.swing.JToggleButton();
        btSair = new javax.swing.JToggleButton();
        btExc = new javax.swing.JToggleButton();
        rdBtMasc = new javax.swing.JRadioButton();
        rdBtFem = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        msgNomeAp.setText("Nome");

        msgCpf.setText("CPF");

        msgSexo.setText("Sexo");

        msgIdade.setText("Idade");

        msgTurnServ.setText("Turno do Servico");

        msgSal.setText("Salario");

        msgFunc.setText("Funcao");

        msgDataCad.setText("Data cadastro (apenas numeros)");

        entCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entCpfActionPerformed(evt);
            }
        });

        entSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entSalActionPerformed(evt);
            }
        });

        entFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entFuncActionPerformed(evt);
            }
        });

        btCad.setText("Cadastro");
        btCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadActionPerformed(evt);
            }
        });

        btEdit.setText("Editar");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btConsul.setText("Consultar");
        btConsul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsulActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btListAp.setText("Lista de Funcionarios cadastrados");
        btListAp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListApActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btExc.setText("Excluir");
        btExc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcActionPerformed(evt);
            }
        });

        btGpSexo.add(rdBtMasc);
        rdBtMasc.setText("Masculino");

        btGpSexo.add(rdBtFem);
        rdBtFem.setText("Feminino");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(msgIdade)
                            .addComponent(msgCpf)
                            .addComponent(msgDataCad)
                            .addComponent(msgNomeAp)
                            .addComponent(msgSexo))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdBtMasc)
                                .addGap(18, 18, 18)
                                .addComponent(rdBtFem))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(entNomeAp, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(msgSal))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(entDataCad)
                                    .addComponent(entCpf)
                                    .addComponent(entIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(msgTurnServ)
                                    .addComponent(msgFunc))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(entSal, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(entTurnServ, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(entFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btSair)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btListAp))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btCad)
                            .addGap(18, 18, 18)
                            .addComponent(btEdit)
                            .addGap(18, 18, 18)
                            .addComponent(btConsul)
                            .addGap(18, 18, 18)
                            .addComponent(btLimpar)
                            .addGap(18, 18, 18)
                            .addComponent(btExc))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgCpf)
                            .addComponent(entCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgNomeAp)
                            .addComponent(entNomeAp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(msgSal)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(entTurnServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(msgTurnServ))
                        .addGap(18, 18, 18)
                        .addComponent(entSal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(msgIdade)
                                .addComponent(msgFunc))
                            .addComponent(entIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(entDataCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(msgDataCad)))
                    .addComponent(entFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(msgSexo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdBtMasc)
                            .addComponent(rdBtFem))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCad)
                    .addComponent(btEdit)
                    .addComponent(btConsul)
                    .addComponent(btLimpar)
                    .addComponent(btExc))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSair)
                    .addComponent(btListAp))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entCpfActionPerformed

    private void btCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadActionPerformed
        btCad();
        limpTudo();
    }//GEN-LAST:event_btCadActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        btEdit();
        limpTudo();
    }//GEN-LAST:event_btEditActionPerformed

    private void btConsulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsulActionPerformed
        btConsul();
    }//GEN-LAST:event_btConsulActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
       limpTudo();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btListApActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListApActionPerformed
        listCadFuncionario.getListCadFuncionario().setVisible(true);
    }//GEN-LAST:event_btListApActionPerformed

    private void btExcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcActionPerformed
        btExc();
        limpTudo();
    }//GEN-LAST:event_btExcActionPerformed

    private void entSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entSalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entSalActionPerformed

    private void entFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entFuncActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entFuncActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        fechar();
    }//GEN-LAST:event_btSairActionPerformed
    public void fechar(){
        int close = JOptionPane.showConfirmDialog(
                        null,
                        "Deseja realmente sair?",
                        "Sair",
                        JOptionPane.YES_NO_OPTION
                );
        if(close == 0){
                dispose();
        }
    }
    public void limpTudo(){
        entNomeAp.setText("");
        entCpf.setText("");
        entIdade.setText("");
        entTurnServ.setText("");
        entSal.setText("");
        entFunc.setText("");
        entDataCad.setText("");
        btGpPersPart.clearSelection();
        btGpSexo.clearSelection();
        btGpTipoCont.clearSelection();
    }
    public void btExc(){
        Funcionarios f = new Funcionarios();
        try{
            f.setCpf(Long.parseLong(entCpf.getText()));
        }catch(CpfInvException cie){
            cie.impCpfInv();
            cie.corCpfInv(f);
        }
        catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(
                null, 
                "Seu cpf e invalido (Deve ser digitado numeros)! Digite um cpf valido.",
                "Cpf Inválido",
                1
            );
            CpfInvException cie = new CpfInvException();
            cie.corCpfInv(f);
        }
        f = BancoArray.getBanco().delFuncCpf(f);
        
        if(f != null){
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionario nao encontrado",
                    "Exclusao de Funcionario",
                    1
            );
        }
        else{
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionario excluido com sucesso",
                    "Exclusao de Funcionario",
                    1
            );
        }
        
    }
    public void btConsul(){
        Funcionarios f = new Funcionarios();
        try{
            f.setCpf(Long.parseLong(entCpf.getText()));
        }catch(CpfInvException cie){
            cie.impCpfInv();
            cie.corCpfInv(f);
        }
        catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(
                null, 
                "Seu cpf e invalido (Deve ser digitado numeros)! Digite um cpf valido.",
                "Cpf Inválido",
                1
            );
            CpfInvException cie = new CpfInvException();
            cie.corCpfInv(f);
        }
        
        f = BancoArray.getBanco().consFunCpf(f);
        
        if(f != null){
            entNomeAp.setText(f.getNome());
            entCpf.setText(Long.toString(f.getCpf()));
            entIdade.setText(Integer.toString(f.getIdade()));
            entTurnServ.setText(f.getTurnoServico());
            entSal.setText(Float.toString(f.getSalario()));
            entDataCad.setText(f.getDataCadastro());
            entFunc.setText(f.getFuncao());
            if(f.getSexo().equalsIgnoreCase("Masculino")){
                rdBtMasc.setSelected(true);
            }
            else if(f.getSexo().equalsIgnoreCase("Feminino")){
                rdBtFem.setSelected(true);
            }
            
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionario encontrado com sucesso!",
                    "Consulta Funcionario",
                    1
            );
        }
        else{
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionario não encontrado!",
                    "Consulta Funcionario",
                    1
            );
        }
    }
    public void btEdit(){
        Funcionarios f = new Funcionarios();
        try{
            f.setCpf(Long.parseLong(entCpf.getText()));
        }catch(CpfInvException cie){
            cie.impCpfInv();
            cie.corCpfInv(f);
        }
        catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(
                null, 
                "Seu cpf e invalido (Deve ser digitado numeros)! Digite um cpf valido.",
                "Cpf Inválido",
                1
            );
            CpfInvException cie = new CpfInvException();
            cie.corCpfInv(f);
        }
        
        f = BancoArray.getBanco().altFunCpf(f);
        
        if(f != null){
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionario alterado!",
                    "Alteração de Funcionario",
                    1
            );
        }
        else{
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionario não encontrado",
                    "Alteração de Funcionario",
                    1
            );
        }
    }
    public void btCad(){
        f = new Funcionarios();
        
        f.setNome(entNomeAp.getText());
        try{
            f.setCpf(Long.parseLong(entCpf.getText()));
        }
        catch(CpfInvException cie){
            cie.impCpfInv();
            cie.corCpfInv(f);
        }
        catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(
                null, 
                "Seu cpf e invalido (Deve ser digitado numeros)! Digite um cpf valido.",
                "Cpf Inválido",
                1
            );
            CpfInvException cie = new CpfInvException();
            cie.corCpfInv(f);
        }
        try{
            f.setIdade(Integer.parseInt(entIdade.getText()));
        }
        catch(NumberFormatException nfe){
            f.setIdade(Integer.parseInt(JOptionPane.showInputDialog(
                    null,
                    "Digite uma nova idade",
                    "Idade inválida",
                    1
            )));
        }
        if(rdBtMasc.isSelected() == true){
            f.setSexo("Masculino");
        }
        else if(rdBtFem.isSelected() == true){
            f.setSexo("Feminino");
        }
        f.setTurnoServico(entTurnServ.getText());
        try{
           f.setSalario(Float.parseFloat(entSal.getText()));
        } catch(NumberFormatException nfe){
            f.setSalario(Float.parseFloat(JOptionPane.showInputDialog(
                    null,
                    "Salario invalida! Digite numeros para o Salario",
                    "Salario invalida",
                    1
            )));
        }
        f.setFuncao(entFunc.getText());
        try{
            f.setDataCadastro(entDataCad.getText());            
        }
        catch(DataInvException die){
            die.impDataInv();
            die.corDataInv(f);
        }
        
        f = BancoArray.getBanco().cadFunc(f);
        
        if(f != null){
            JOptionPane.showMessageDialog(
                null,
                "Funcionario cadastrado com sucesso!",
                "Cadastro de Funcionario",
                1
            );
        }
        else{
            JOptionPane.showMessageDialog(
                null,
                "Cliente ja cadastrado!",
                "Cadastro de cliente",
                1
            );
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCad;
    private javax.swing.JToggleButton btConsul;
    private javax.swing.JToggleButton btEdit;
    private javax.swing.JToggleButton btExc;
    private javax.swing.ButtonGroup btGpPersPart;
    private javax.swing.ButtonGroup btGpSexo;
    private javax.swing.ButtonGroup btGpTipoCont;
    private javax.swing.JToggleButton btLimpar;
    private javax.swing.JToggleButton btListAp;
    private javax.swing.JToggleButton btSair;
    private javax.swing.JTextField entCpf;
    private javax.swing.JTextField entDataCad;
    private javax.swing.JTextField entFunc;
    private javax.swing.JTextField entIdade;
    private javax.swing.JTextField entNomeAp;
    private javax.swing.JTextField entSal;
    private javax.swing.JTextField entTurnServ;
    private javax.swing.JLabel msgCpf;
    private javax.swing.JLabel msgDataCad;
    private javax.swing.JLabel msgFunc;
    private javax.swing.JLabel msgIdade;
    private javax.swing.JLabel msgNomeAp;
    private javax.swing.JLabel msgSal;
    private javax.swing.JLabel msgSexo;
    private javax.swing.JLabel msgTurnServ;
    private javax.swing.JRadioButton rdBtFem;
    private javax.swing.JRadioButton rdBtMasc;
    // End of variables declaration//GEN-END:variables
    public String getEntNomeAp(){
        return entNomeAp.getText();
    }
    public String getDataCad(){
        return entDataCad.getText();
    }
    public String getEntCpf(){
        return entCpf.getText();
    }
    public String getEntIdade(){
        return entIdade.getText();
    }
    public String getEntTurnServ(){
        return entTurnServ.getText();
    }
    public String getEntSal(){
        return entSal.getText();
    }
    public String getEntFunc(){
        return entFunc.getText();
    }
    public String getEntSexo(){
        if(rdBtMasc.isSelected() == true){
            return "Masculino";
        }
        else if(rdBtFem.isSelected() == true){
            return "Feminino";
        }
        return null;
    }
}
